{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/Counters.sol\":{\"keccak256\":\"0xe7e6dae96f15e03d76c0851a6642333f6214df7736d549f6e97b955ff7a591bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9efdf9bb4e474fa4ac26f5cf33a68d246db8120c8889212e33f55d68b726113a\",\"dweb:/ipfs/QmThxkHnm3LBQoM2Sd6M7W7Eb2RYyum5H16Lqw8E2n6Crd\"]},\"/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x40c85263940f442837c6da26702ec2a3a4feb58efb3396391c5be2ea919e013d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dee1b3e572123237d4255f77d65dae64a1176ab1771f56c00669c592735047d9\",\"dweb:/ipfs/QmdJ8Xcw8XLAQtuZqHaS2M7ULkNC8jSyzivUAjfe4dbZCB\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ebe663ba739553027920c726265c978c1dd51694841c655b351da84f2a1d0e3064736f6c634300080d0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ebe663ba739553027920c726265c978c1dd51694841c655b351da84f2a1d0e3064736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "670:786:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "670:786:4:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport './SafeMath.sol';\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\r\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\n * directly accessed.\r\n */\r\n\r\n library Counters {\r\n     using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        uint256 _value;\r\n    }\r\n\r\n    // we want to find the current value for an account\r\n    // the counter Counter variable type is to be store in storage - permanent\r\n    function current(Counter storage counter) internal view returns(uint256){\r\n        return counter._value;\r\n    }\r\n\r\n     // function that always increment by 1.\r\n    function increment(Counter storage counter) internal {\r\n        //counter._value = counter._value + 1;\r\n        counter._value += 1;\r\n    }\r\n\r\n    // function that always decrement by 1.\r\n    function decrement(Counter storage counter) internal {\r\n        // note the sub function is from SaveMath library\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n\r\n }",
  "sourcePath": "F:/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/Counters.sol",
  "ast": {
    "absolutePath": "/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        469
      ],
      "SafeMath": [
        599
      ]
    },
    "id": 470,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 418,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 419,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 470,
        "sourceUnit": 600,
        "src": "58:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 420,
          "nodeType": "StructuredDocumentation",
          "src": "86:579:4",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 469,
        "linearizedBaseContracts": [
          469
        ],
        "name": "Counters",
        "nameLocation": "678:8:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 423,
            "libraryName": {
              "id": 421,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 599,
              "src": "701:8:4"
            },
            "nodeType": "UsingForDirective",
            "src": "695:27:4",
            "typeName": {
              "id": 422,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 426,
            "members": [
              {
                "constant": false,
                "id": 425,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "764:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 426,
                "src": "756:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 424,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "756:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "737:7:4",
            "nodeType": "StructDefinition",
            "scope": 469,
            "src": "730:48:4",
            "visibility": "public"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "995:40:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 434,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "1013:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 425,
                    "src": "1013:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 433,
                  "id": 436,
                  "nodeType": "Return",
                  "src": "1006:21:4"
                }
              ]
            },
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "932:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "956:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "940:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 427,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "940:7:4"
                    },
                    "referencedDeclaration": 426,
                    "src": "940:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:25:4"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "987:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:9:4"
            },
            "scope": 469,
            "src": "923:112:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "1142:86:4",
              "statements": [
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 444,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "1201:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "1201:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1219:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1201:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:19:4"
                }
              ]
            },
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1098:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1124:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "1108:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 440,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 439,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "1108:7:4"
                    },
                    "referencedDeclaration": 426,
                    "src": "1108:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:25:4"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1142:0:4"
            },
            "scope": 469,
            "src": "1089:139:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "1334:116:4",
              "statements": [
                {
                  "expression": {
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 457,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "1404:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "1404:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1440:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 460,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "1421:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 425,
                          "src": "1421:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1421:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1421:21:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1404:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:38:4"
                }
              ]
            },
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1290:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1316:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "1300:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 453,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 452,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "1300:7:4"
                    },
                    "referencedDeclaration": 426,
                    "src": "1300:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1299:25:4"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:4"
            },
            "scope": 469,
            "src": "1281:169:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 470,
        "src": "670:786:4",
        "usedErrors": []
      }
    ],
    "src": "33:1423:4"
  },
  "legacyAST": {
    "absolutePath": "/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        469
      ],
      "SafeMath": [
        599
      ]
    },
    "id": 470,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 418,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "/F/Crypto Courses/The Complete NFT Web Development Course - Zero To Expert/Project NFT/Front-End-Project-NFT/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 419,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 470,
        "sourceUnit": 600,
        "src": "58:24:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 420,
          "nodeType": "StructuredDocumentation",
          "src": "86:579:4",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 469,
        "linearizedBaseContracts": [
          469
        ],
        "name": "Counters",
        "nameLocation": "678:8:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 423,
            "libraryName": {
              "id": 421,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 599,
              "src": "701:8:4"
            },
            "nodeType": "UsingForDirective",
            "src": "695:27:4",
            "typeName": {
              "id": 422,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 426,
            "members": [
              {
                "constant": false,
                "id": 425,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "764:6:4",
                "nodeType": "VariableDeclaration",
                "scope": 426,
                "src": "756:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 424,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "756:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "737:7:4",
            "nodeType": "StructDefinition",
            "scope": 469,
            "src": "730:48:4",
            "visibility": "public"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "995:40:4",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 434,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "1013:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 425,
                    "src": "1013:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 433,
                  "id": 436,
                  "nodeType": "Return",
                  "src": "1006:21:4"
                }
              ]
            },
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "932:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "956:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "940:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 427,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "940:7:4"
                    },
                    "referencedDeclaration": 426,
                    "src": "940:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:25:4"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "987:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:9:4"
            },
            "scope": 469,
            "src": "923:112:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "1142:86:4",
              "statements": [
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 444,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "1201:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "1201:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1219:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1201:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:19:4"
                }
              ]
            },
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1098:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1124:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "1108:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 440,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 439,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "1108:7:4"
                    },
                    "referencedDeclaration": 426,
                    "src": "1108:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:25:4"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1142:0:4"
            },
            "scope": 469,
            "src": "1089:139:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "1334:116:4",
              "statements": [
                {
                  "expression": {
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 457,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "1404:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "1404:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1440:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 460,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "1421:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 425,
                          "src": "1421:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1421:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1421:21:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1404:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:38:4"
                }
              ]
            },
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1290:9:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1316:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "1300:23:4",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 453,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 452,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "1300:7:4"
                    },
                    "referencedDeclaration": 426,
                    "src": "1300:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$426_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1299:25:4"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:4"
            },
            "scope": 469,
            "src": "1281:169:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 470,
        "src": "670:786:4",
        "usedErrors": []
      }
    ],
    "src": "33:1423:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-03-24T10:43:39.428Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}